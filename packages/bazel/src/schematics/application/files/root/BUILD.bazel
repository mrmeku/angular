package(default_visibility = ["//visibility:public"])

load("@angular//:index.bzl", "ng_module")
load("@build_bazel_rules_typescript//:defs.bzl", "ts_library", "ts_web_test_suite")
load("@build_bazel_rules_nodejs//:defs.bzl", "rollup_bundle", "history_server")
load("@build_bazel_rules_typescript//:defs.bzl", "ts_devserver")

ng_module(
    name = "src",
    srcs = glob(
        ["**/*.ts"],
        exclude = [
            "**/*.spec.ts",
            "test.ts",
        ],
    ),
    assets = glob([
        "**/*.css",
        "**/*.html",
    ]),
    deps = [
        "@angular//packages/core",
        "@angular//packages/platform-browser",
    ],
)

# Needed because the prodserver only loads static files that appear under this
# package.
genrule(
    name = "zonejs",
    srcs = ["//:node_modules/zone.js/dist/zone.min.js"],
    outs = ["zone.min.js"],
    cmd = "cp $< $@",
)

history_server(
    name = "prodserver",
    data = [
        "index.html",
        ":bundle",
        ":zonejs",
    ],
)

ts_devserver(
    name = "devserver",
    additional_root_paths = [
        "__main__/node_modules/zone.js/dist",
        "__main__/node_modules/tslib",
    ],
    entry_module = "__main__/src/main",
    port = 4200,
    serving_path = "/bundle.min.js",
    static_files = [
        "//:node_modules/zone.js/dist/zone.min.js",
        "//:node_modules/tslib/tslib.js",
        "index.html",
    ],
    deps = [":src"],
)

ts_library(
    name = "test_lib",
    testonly = 1,
    srcs = glob(["**/*.spec.ts"]),
    deps = [
        ":src",
        "@angular//packages/core/testing",
        "@angular//packages/platform-browser-dynamic/testing",
    ],
)

ts_web_test_suite(
    name = "test",
    srcs = ["//:node_modules/tslib/tslib.js"],
    # do not sort
    bootstrap = [
        "//:node_modules/zone.js/dist/zone-testing-bundle.js",
        "//:node_modules/reflect-metadata/Reflect.js",
    ],
    browsers = [
        "@io_bazel_rules_webtesting//browsers:chromium-local",
        "@io_bazel_rules_webtesting//browsers:firefox-local",
    ],
    deps = [
        ":test_lib",
    ],
)

rollup_bundle(
    name = "bundle",
    entry_point = "src/main",
    deps = ["//src"],
)
